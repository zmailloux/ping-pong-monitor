# How to get certs for SSL
# https://medium.com/the-andela-way/how-to-host-an-application-on-gke-e95e7b1177eb
# https://certbot.eff.org/lets-encrypt/osx-nginx
adminPassword: turtle00
persistence:
  enabled: true
  size: 15Gi
  accessModes:
    - ReadWriteOnce
plugins:
  - digrich-bubblechart-panel
  - jdbranham-diagram-panel
  - grafana-piechart-panel
  - michaeldmoore-annunciator-panel
  - vonage-status-panel
  - monitoringartist-monitoringart-datasource
  - yesoreyeram-boomtable-panel
  - camptocamp-prometheus-alertmanager-datasource
resources:
 requests:
   cpu: 25m
   memory: 128Mi

## Expose the grafana service to be accessed from outside the cluster (LoadBalancer service).
## or access it from within the cluster (ClusterIP service). Set the service type and the port to serve it.
## ref: http://kubernetes.io/docs/user-guide/services/
##
service:
  type: LoadBalancer
  port: 80
  targetPort: 3000
    # targetPort: 4181 To be used with a proxy extraContainer
  annotations: {}
  labels: {}
  portName: service

# service:
#   port: 3000

## Only enable if you have nginx setup and pointing to a domain
# ingress:
#   enabled: true
#   annotations:
#     kubernetes.io/ingress.class: nginx
#     nginx.ingress.kubernetes.io/ssl-redirect: "true"
#   hosts:
#     - address.echo.dev
#
# env:
#   GF_SERVER_DOMAIN: address.echo.dev
#   GF_SERVER_ROOT_URL: https://address.echo.dev

datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
    - name: prometheus-k8s
      type: prometheus
      url: http://prometheus-load-server.monitoring:80
      access: proxy
      isDefault: true
    - name: InfluxDB
      type: influxdb
      url: http://influxdb.monitoring:8086/
      access: proxy
      database: player_status_test
      isDefault: false
sidecar:
  dashboards:
    enabled: true
    label: grafana_dashboard
  # datasources:
  #   enabled: true
  #   # label that the configmaps with datasources are marked with
  #   label: grafana_datasource

grafana.ini:
  paths:
    data: /var/lib/grafana/data
    logs: /var/log/grafana
    plugins: /var/lib/grafana/plugins
    provisioning: /etc/grafana/provisioning
  analytics:
    check_for_updates: true
  log:
    mode: console
  grafana_net:
    url: https://grafana.net
  auth.anonymous:
    enabled: true
  security:
    allow_embedding: true